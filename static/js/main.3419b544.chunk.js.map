{"version":3,"sources":["Components/Logo/Logo.png","Components/Header/Header.js","Components/Signin/Signin.js","Components/Registration/Registration.js","Components/Logo/Logo.js","Components/Rank/Rank.js","Components/InputForm/InputForm.js","Components/InputImage/InputImage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","changeRoute","isSignedin","onClick","className","Signin","id","htmlFor","type","name","value","Registration","Logo","options","max","style","height","width","src","brain","alt","Rank","InputForm","inputOnChange","btnOnClick","onChange","placeholder","InputImage","imageURL","box","top","right","bottom","left","app","Clarifai","App","apiKey","particlesOptions","particles","number","density","enable","value_area","shape","size","line_linked","enable_auto","distance","opacity","move","speed","out_mode","interactivity","detect_on","events","onhover","mode","calculateFaceBox","response","boxBorders","outputs","data","regions","region_info","bounding_box","inputImg","document","getElementById","Number","left_col","top_row","right_col","bottom_row","displayBox","bordersObj","setState","event","input","target","imageUrl","state","models","predict","FACE_DETECT_MODEL","then","catch","err","console","log","route","params","this","Component","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.3419b544.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Logo.87466cd4.png\";","import React from 'react';\r\nimport './Header.css';\r\n\r\nconst Header = ({ changeRoute,isSignedin }) =>{\r\n        if(isSignedin){\r\n            return (\r\n                <nav>\r\n                    <p  \r\n                        onClick={() => changeRoute('signin')} \r\n                        className='f4 link dim black underline pa2 mr2 mr4 pointer'>\r\n                        Sign Out\r\n                    </p>\r\n                </nav>\r\n            );\r\n        }\r\n        else{\r\n            return (\r\n                <nav className='f4 link black underline pa2 mr2 mr4 pointer'>\r\n                    <p\r\n                        onClick={() => changeRoute('register')}\r\n                        className='dim mr3' >\r\n                        Register\r\n                    </p>\r\n                    <p \r\n                        onClick={() => changeRoute('signin')}\r\n                        className='dim' >\r\n                        Sign In\r\n                    </p>\r\n                </nav>\r\n            );\r\n        }\r\n}\r\n\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nconst Signin = ({ changeRoute }) =>{\r\n    return(\r\n        <article className=\"br3 ba dark-gray b--black-10 mv4 w-100 w-50-m w-25-l mw5 shadow-5 center\">\r\n            <main className=\"pa4 black-80\">\r\n                <div className=\"measure\">\r\n                    <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                    <legend className=\"f1 fw6 ph0 mh0\">Sign In</legend>\r\n                    <div className=\"mt3\">\r\n                        <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n                        <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\" name=\"email-address\"  id=\"email-address\" />\r\n                    </div>\r\n                    <div className=\"mv3\">\r\n                        <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                        <input className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\" name=\"password\"  id=\"password\" />\r\n                    </div>\r\n                    </fieldset>\r\n                    <div className=\"\">\r\n                    <input \r\n                        onClick={() => changeRoute('home')}\r\n                        className=\"b ph2 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" \r\n                        type=\"submit\" \r\n                        value=\"Sign in\" />\r\n                    </div>\r\n                    <div className=\"lh-copy mt3\">\r\n                    <p \r\n                        onClick={() => changeRoute('register')}\r\n                        className=\"f6 link dim black db pointer\">\r\n                        Register</p>\r\n                    </div>\r\n                </div>\r\n            </main>\r\n        </article>\r\n    );\r\n}\r\n\r\nexport default Signin;","import React from 'react';\r\n\r\nconst Registration = ({ changeRoute }) => {\r\n    return(\r\n        <article className=\"br3 ba dark-gray b--black-10 mv4 w-100 w-50-m w-25-l mw5 shadow-5 center\">\r\n            <main className=\"pa4 black-80\">\r\n                <div className=\"measure\">\r\n                    <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                    <legend className=\"f2 fw6 ph0 mh0\">Registration</legend>\r\n                    <div className=\"mt3\">\r\n                        <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">First Name</label>\r\n                        <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"text\" name=\"name\"  id=\"name\" />\r\n                    </div>\r\n                    <div className=\"mt3\">\r\n                        <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n                        <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\" name=\"email-address\"  id=\"email-address\" />\r\n                    </div>\r\n                    <div className=\"mv3\">\r\n                        <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                        <input className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\" name=\"password\"  id=\"password\" />\r\n                    </div>\r\n                    </fieldset>\r\n                    <div className=\"\">\r\n                    <input \r\n                        onClick = {() => changeRoute('home')}\r\n                        className=\"b ph2 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" \r\n                        type=\"submit\" \r\n                        value=\"Register\" />\r\n                    </div>\r\n                    <div className=\"lh-copy mt3\">\r\n                    </div>\r\n                </div>\r\n            </main>\r\n        </article>\r\n    );\r\n}\r\n\r\nexport default Registration;","import React from 'react';\r\nimport './Logo.css';\r\nimport Tilt from 'react-tilt';\r\nimport brain from './Logo.png'\r\n\r\nconst Logo = () => {\r\n    return(\r\n        <div className='ml4 mb2'>\r\n            <Tilt className=\"Tilt br2 shadow-2\" options={{ max : 50 }} style={{ height: 120, width: 120 }} >\r\n                <div className=\"Tilt-inner\">\r\n                    <img src={brain} alt='brain' />\r\n                </div>\r\n            </Tilt>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Logo;","import React from 'react';\r\n\r\nconst Rank = () => {\r\n    return(\r\n        <div>\r\n            <div className='white f3'>{'Esmail, your Rank is ...'}</div>\r\n            <div className='white f1'>{'#5'}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Rank;","import React from 'react';\r\nimport './InputForm.css';\r\nconst InputForm = ({inputOnChange,btnOnClick}) => {\r\n    return(\r\n        <div>\r\n            <p className='f4'>{`This magic brain will detect faces, Give it a try.`}</p>\r\n            <div className='center'>\r\n                <div className='form center pa4 br3 shadow-5'>\r\n                    <input onChange={inputOnChange} className='f5 pa2 w-70 center ba b--light-purple br3 ma1' type='text' placeholder='Enter an image URL..'></input>\r\n                    <button onClick={btnOnClick} className='w-30 grow f5 link ph3 pv2 dib white bg-light-purple ba b--light-purple br3 ma1'>Detect</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default InputForm;","import React from 'react';\r\nimport './InputImage.css';\r\n\r\nconst InputImage = ({imageURL,box}) =>{\r\n    return(\r\n        <div className='center'>\r\n            <div className='absolute ma3'>\r\n                <img id='inputImg' src={ imageURL } alt='' width='400vw'></img>\r\n                <div className='bounding-box' style={{top:box.top , right:box.right , bottom:box.bottom , left:box.left}}></div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default InputImage;","import React,{Component} from 'react';\nimport './App.css';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nimport Header from './Components/Header/Header';\nimport Signin from './Components/Signin/Signin';\nimport Registration from './Components/Registration/Registration';\nimport Logo from './Components/Logo/Logo';\nimport Rank from './Components/Rank/Rank';\nimport InputForm from './Components/InputForm/InputForm';\nimport InputImage from './Components/InputImage/InputImage';\n\nconst app = new Clarifai.App({\n  apiKey: '2a8ca79659244665ae8fc31213770e6a'\n});\n\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 80,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    },\n    shape: {\n      type: 'circle'\n    },\n    size: {\n      value: 3\n    },\n    line_linked: {\n      enable_auto: true,\n      distance: 200,\n      opacity: 0.7\n    },\n    move: {\n      speed: 6,\n      out_mode: 'out'\n    }\n  },\n  interactivity: {\n    detect_on: \"window\",\n    events: {\n      onhover: {\n        enable: true,\n        mode: 'repulse'\n      }\n    }\n  }\n}\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'signin',\n      isSignedin: false\n    }\n  }\n\n  calculateFaceBox = (response) => {\n    const boxBorders = response.outputs[0].data.regions[0].region_info.bounding_box;\n    const inputImg = document.getElementById('inputImg');\n    const width = Number(inputImg.width);\n    const height = Number(inputImg.height);\n    return{\n      left: boxBorders.left_col * width,\n      top: boxBorders.top_row * height,\n      right: width-(boxBorders.right_col * width),\n      bottom: height-(boxBorders.bottom_row * height)\n    }\n  }\n\n  displayBox = (bordersObj) =>{\n    this.setState({box: bordersObj})\n  }\n\n  inputOnChange = (event) => {\n    this.setState({input: event.target.value});\n  }\n\n  btnOnClick = () => {\n    this.setState({imageUrl: this.state.input})\n    app.models.predict(\n      Clarifai.FACE_DETECT_MODEL, \n      this.state.input)\n      .then(response => this.displayBox(this.calculateFaceBox(response)))\n      .catch(err => console.log(err))\n  }\n\n  changeRoute = (route) => {\n    this.setState({ route: route });\n    if(route === 'home')\n      this.setState({ isSignedin: true });\n    else{\n      this.setState({ isSignedin: false });\n    }\n  }\n  \n  render() {\n    return(\n      <div className='App'>\n        <Particles className='particles' params={particlesOptions} />\n        <Header changeRoute={this.changeRoute} isSignedin={this.state.isSignedin} />\n        { this.state.route === 'signin'               // if(condition)\n        ? <Signin changeRoute={this.changeRoute} />   // ? means true\n        : (                                           // : means else\n            this.state.route === 'register'            \n            ? <Registration changeRoute={this.changeRoute}  />\n            : <div>\n                <Logo />\n                <Rank />\n                <InputForm inputOnChange={this.inputOnChange} btnOnClick={this.btnOnClick} />\n                <InputImage imageURL={this.state.imageUrl} box={this.state.box} />\n              </div>\n          )\n        }\n      </div>\n    )\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}