{"version":3,"sources":["Components/Logo/Logo.png","Components/Header/Header.js","Components/Signin/Signin.js","Components/Registration/Registration.js","Components/Logo/Logo.js","Components/Rank/Rank.js","Components/InputForm/InputForm.js","Components/InputImage/InputImage.js","Components/Hints/Hints.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","changeRoute","isSignedin","onClick","className","Signin","props","onEmailChange","event","setState","signInEmail","target","value","onPasswordChange","signInPassword","onSubmitClick","fetch","method","headers","body","JSON","stringify","email","state","password","then","response","json","data","id","loadUser","checkError","this","htmlFor","onChange","type","name","React","Component","Registration","registerEmail","registerPassword","onUsernameChange","registerUsername","onRegisterClick","Logo","options","max","style","height","width","src","brain","alt","Rank","entries","InputForm","inputOnChange","btnOnClick","placeholder","InputImage","imageURL","box","top","right","bottom","left","Hints","particlesOptions","particles","number","density","enable","value_area","shape","size","line_linked","enable_auto","distance","opacity","move","speed","out_mode","interactivity","detect_on","events","onhover","mode","initialState","input","imageUrl","route","userCanUseIt","user","joined","App","calculateFaceBox","boxBorders","outputs","regions","region_info","bounding_box","inputImg","document","getElementById","Number","left_col","top_row","right_col","bottom_row","displayBox","bordersObj","Object","assign","catch","err","console","log","params","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.e356554b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Logo.87466cd4.png\";","import React from 'react';\r\nimport './Header.css';\r\n\r\nconst Header = ({ changeRoute,isSignedin }) =>{\r\n        if(isSignedin){\r\n            return (\r\n                <nav>\r\n                    <p  \r\n                        onClick={() => changeRoute('signin')} \r\n                        className='f4 link dim white underline pa2 mr2 mr4 pointer'>\r\n                        Sign Out\r\n                    </p>\r\n                </nav>\r\n            );\r\n        }\r\n        else{\r\n            return (\r\n                <nav className='f4 link white underline pa2 mr2 mr4 pointer'>\r\n                    <p\r\n                        onClick={() => changeRoute('register')}\r\n                        className='dim mr3' >\r\n                        Register\r\n                    </p>\r\n                    <p \r\n                        onClick={() => changeRoute('signin')}\r\n                        className='dim' >\r\n                        Sign In\r\n                    </p>\r\n                </nav>\r\n            );\r\n        }\r\n}\r\n\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nclass Signin extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            signInEmail: '',\r\n            signInPassword: '',\r\n            checkError: false\r\n        }\r\n    }\r\n\r\n    onEmailChange = (event) => {\r\n        this.setState({ signInEmail: event.target.value })\r\n    }\r\n\r\n    onPasswordChange = (event) => {\r\n        this.setState({ signInPassword: event.target.value })\r\n    }\r\n\r\n    onSubmitClick = () => {\r\n        fetch('https://evening-savannah-93967.herokuapp.com/signin/',{\r\n            method: 'post',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({\r\n                email: this.state.signInEmail,\r\n                password: this.state.signInPassword\r\n            })\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            if(data.id) {\r\n                this.props.loadUser(data);\r\n                this.props.changeRoute('home');\r\n            }\r\n            else{\r\n                this.setState({ checkError: true });\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { changeRoute } = this.props;\r\n        return(\r\n            <div>\r\n                <h1 className='f1 garamond mb5 light-red'>FACE DETECTION APP</h1>\r\n                <article className=\"br3 ba white b--white-90 mv4 w-100 w-50-m w-25-l mw5 shadow-5 center\">\r\n                    <main className=\"pa4 white\">\r\n                        <div className=\"measure\">\r\n                            <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                            <legend className=\"f2 fw6 ph0 mh0\">Sign In</legend>\r\n                            {\r\n                                this.state.checkError === true\r\n                                ? <p className='f5 underline calisto light-red'>Wrong Email or Password..</p>\r\n                                : <span></span>\r\n                            }\r\n                            <div className=\"mt3\">\r\n                                <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n                                <input \r\n                                    onChange= { this.onEmailChange }\r\n                                    className=\"pa2 input-reset ba b--white-90 bg-transparent hover-bg-black hover-white w-100\" \r\n                                    type=\"email\" \r\n                                    name=\"email-address\"  \r\n                                    id=\"email-address\"    \r\n                                />\r\n                            </div>\r\n                            <div className=\"mv3\">\r\n                                <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                                <input \r\n                                    onChange={ this.onPasswordChange }\r\n                                    className=\"b pa2 input-reset ba b--white-90 bg-transparent hover-bg-black hover-white w-100\" \r\n                                    type=\"password\" \r\n                                    name=\"password\"  \r\n                                    id=\"password\" \r\n                                />\r\n                            </div>\r\n                            </fieldset>\r\n                            <div>\r\n                                <input \r\n                                    onClick= { this.onSubmitClick }\r\n                                    className=\"b ph2 pv2 input-reset ba b--transparent bg-red br3 white-90 grow pointer f4 dib garamond\" \r\n                                    type=\"submit\" \r\n                                    value=\"Sign in\" \r\n                                />\r\n                            </div>\r\n                            <div className=\"lh-copy mt3\">\r\n                                <p \r\n                                    onClick={() => changeRoute('register')}\r\n                                    className=\"f6 link dim white db pointer\">\r\n                                    Register\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                    </main>\r\n                </article>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Signin;","import React from 'react';\r\n\r\nclass Registration extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            registerEmail: '',\r\n            registerPassword: '',\r\n            registerUsername: '',\r\n            checkError: false\r\n        }\r\n    }\r\n\r\n    onEmailChange = (event) => {\r\n        this.setState({ registerEmail: event.target.value })\r\n    }\r\n\r\n    onPasswordChange = (event) => {\r\n        this.setState({ registerPassword: event.target.value })\r\n    }\r\n    onUsernameChange = (event) => {\r\n        this.setState({ registerUsername: event.target.value })\r\n    }\r\n\r\n    onRegisterClick = () => {\r\n        fetch('https://evening-savannah-93967.herokuapp.com/register/',{\r\n            method: 'post',\r\n            headers: {'Content-Type':'application/json'},\r\n            body: JSON.stringify({\r\n                name: this.state.registerUsername,\r\n                email: this.state.registerEmail,\r\n                password: this.state.registerPassword\r\n            })\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            if(data.id) {\r\n                this.props.loadUser(data);\r\n                this.props.changeRoute('home');\r\n            } else {\r\n                this.setState({ checkError: true });\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <h1 className='f1 garamond mb5 light-red'>FACE DETECTION APP</h1>\r\n                <article className=\"br3 ba white b--white-90 mv4 w-100 w-50-m w-25-l mw5 shadow-5 center\">\r\n                    <main className=\"pa4 white\">\r\n                        <div className=\"measure\">\r\n                            <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                                <legend className=\"f2 fw6 ph0 mh0\">Registration</legend>\r\n                                {\r\n                                    this.state.checkError === true\r\n                                    ? <p className='f5 underline calisto light-red'>Unable To Register..</p>\r\n                                    : <span></span>\r\n                                }\r\n                                <div className=\"mt3\">\r\n                                    <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">First Name</label>\r\n                                    <input \r\n                                        onChange={ this.onUsernameChange }\r\n                                        className=\"pa2 input-reset ba bg-transparent hover-bg-black b--white-90 hover-white w-100\" \r\n                                        type=\"text\" \r\n                                        name=\"name\"  \r\n                                        id=\"name\" \r\n                                    />\r\n                                </div>\r\n                                <div className=\"mt3\">\r\n                                    <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n                                    <input \r\n                                        onChange={ this.onEmailChange }\r\n                                        className=\"pa2 input-reset ba bg-transparent hover-bg-black b--white-90 hover-white w-100\" \r\n                                        type=\"email\" \r\n                                        name=\"email-address\" \r\n                                        id=\"email-address\" \r\n                                    />\r\n                                </div>\r\n                                <div className=\"mv3\">\r\n                                    <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                                    <input \r\n                                        onChange={ this.onPasswordChange }\r\n                                        className=\"b pa2 input-reset ba bg-transparent hover-bg-black b--white-90 hover-white w-100\" \r\n                                        type=\"password\" \r\n                                        name=\"password\" \r\n                                        id=\"password\" \r\n                                    />\r\n                                </div>\r\n                            </fieldset>\r\n                            <div className=\"\">\r\n                                <input \r\n                                    onClick= { this.onRegisterClick }\r\n                                    className=\"b ph2 pv2 input-reset ba b--transparent bg-red br3 white-90 grow pointer f4 dib garamond\" \r\n                                    type=\"submit\" \r\n                                    value=\"Register\" \r\n                                />\r\n                            </div>\r\n                            <div className=\"lh-copy mt3\">\r\n                            </div>\r\n                        </div>\r\n                    </main>\r\n                </article>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Registration;","import React from 'react';\r\nimport './Logo.css';\r\nimport Tilt from 'react-tilt';\r\nimport brain from './Logo.png'\r\n\r\nconst Logo = () => {\r\n    return(\r\n        <div className='ml4 mb2'>\r\n            <Tilt className=\"Tilt br2 shadow-2\" options={{ max : 50 }} style={{ height: 120, width: 120 }} >\r\n                <div className=\"Tilt-inner\">\r\n                    <img src={brain} alt='brain' />\r\n                </div>\r\n            </Tilt>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Logo;","import React from 'react';\r\n\r\nconst Rank = ({ name,entries }) => {\r\n    return(\r\n        <div>\r\n            <div className='white f3'>{`${name}, your Rank is ...`}</div>\r\n            <div className='white f1'>{`#${entries}`}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Rank;","import React from 'react';\r\nimport './InputForm.css';\r\nconst InputForm = ({inputOnChange,btnOnClick}) => {\r\n    return(\r\n        <div>\r\n            <p className='f4 white'>{`This magic brain will detect faces, Give it a try.`}</p>\r\n            <div className='center'>\r\n                <div className='form center pa4 br3 shadow-5'>\r\n                    <input onChange={inputOnChange} className='f5 pa2 w-70 center ba b--light-blue br3 ma1' type='text' placeholder='Enter an image URL..'></input>\r\n                    <button onClick={btnOnClick} className='w-30 grow f5 link ph3 pv2 dib white bg-dark-blue ba b--light-blue br3 ma1'>Detect</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default InputForm;","import React from 'react';\r\nimport './InputImage.css';\r\n\r\nconst InputImage = ({imageURL,box}) =>{\r\n    return(\r\n        <div className='center'>\r\n            <div className='absolute ma3'>\r\n                <img id='inputImg' src={ imageURL } alt='' width='400vw'></img>\r\n                <div className='bounding-box' style={{top:box.top , right:box.right , bottom:box.bottom , left:box.left}}></div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default InputImage;","import React from 'react';\r\n\r\nconst Hints = () => {\r\n    return(\r\n        <div className='center mt4'>\r\n            <div className='tl white ba br4 bw1 pa3 shadow-5'>\r\n                <h1 className='f2 tc black'><span className='shadow-5'>Hints</span></h1>\r\n                <h3 className='underline'>How to grab Image URL</h3>\r\n                <h3 className='mt5'>Computers : </h3>\r\n                <p>1. <b>Search</b> images on Google.</p>\r\n                <p>2. <b>Open</b> the image you want.</p>\r\n                <p>3. Right click on it and choose <b>Copy image address</b>.</p>\r\n                <h3 className='mt5'>Phones : </h3>\r\n                <p>1. <b>Search</b> images on Google.</p>\r\n                <p>2. <b>Open</b> the image you want.</p>\r\n                <p>3. Press and hold on it and choose <b>Open image in new tap</b>.</p>\r\n                <p>4. <b>Copy</b> the new tap URL.</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Hints;","import React,{Component} from 'react';\nimport './App.css';\nimport Particles from 'react-particles-js';\nimport Header from './Components/Header/Header';\nimport Signin from './Components/Signin/Signin';\nimport Registration from './Components/Registration/Registration';\nimport Logo from './Components/Logo/Logo';\nimport Rank from './Components/Rank/Rank';\nimport InputForm from './Components/InputForm/InputForm';\nimport InputImage from './Components/InputImage/InputImage';\nimport Hints from './Components/Hints/Hints';\n\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 60,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    },\n    shape: {\n      type: 'circle'\n    },\n    size: {\n      value: 2\n    },\n    line_linked: {\n      enable_auto: true,\n      distance: 180,\n      opacity: 0.5\n    },\n    move: {\n      speed: 3,\n      out_mode: 'out'\n    }\n  },\n  interactivity: {\n    detect_on: \"window\",\n    events: {\n      onhover: {\n        enable: true,\n        mode: 'repulse'\n      }\n    }\n  }\n}\n\nconst initialState = {\n  input: '',\n  imageUrl: '',\n  box: {},\n  route: 'signin',\n  isSignedin: false,\n  userCanUseIt: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    entries: 0,\n    joined: ''\n  }\n}\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = initialState;\n  }\n\n  loadUser = (data) => {\n    this.setState({user: {\n      id: data.id,\n      name: data.name,\n      email: data.email,\n      entries: data.entries,\n      joined: data.joined\n    }})\n  }\n\n  calculateFaceBox = (response) => {\n    const boxBorders = response.outputs[0].data.regions[0].region_info.bounding_box;\n    const inputImg = document.getElementById('inputImg');\n    const width = Number(inputImg.width);\n    const height = Number(inputImg.height);\n    return{\n      left: boxBorders.left_col * width,\n      top: boxBorders.top_row * height,\n      right: width-(boxBorders.right_col * width),\n      bottom: height-(boxBorders.bottom_row * height)\n    }\n  }\n\n  displayBox = (bordersObj) =>{\n    this.setState({box: bordersObj})\n  }\n\n  inputOnChange = (event) => {\n    this.setState({input: event.target.value});\n  }\n\n  btnOnClick = () => {\n    this.setState({imageUrl: this.state.input})\n    fetch('https://evening-savannah-93967.herokuapp.com/imageurl/',{\n      method: 'post',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify({\n        input: this.state.input\n      })\n    })\n    .then(response => response.json())\n    .then(response => {\n      if(response.outputs[0].id)    // to make sure it responded with data not error!\n      {\n        fetch('https://evening-savannah-93967.herokuapp.com/image/',{\n          method: 'put',\n          headers: {'Content-Type': 'application/json'},\n          body: JSON.stringify({\n            id: this.state.user.id\n          })\n        })\n        .then(response => response.json())\n        .then(data => {\n          this.setState({userCanUseIt: true});\n          this.setState(Object.assign(this.state.user,{ entries: data }));\n          //Object.assign instead of setState to update only the entries and leave everything else as it is..\n        })\n      }\n      this.displayBox(this.calculateFaceBox(response));\n      this.setState({input: ''});\n    })\n    .catch(err => console.log(err))\n  }\n\n  changeRoute = (route) => {\n    this.setState({ route: route });\n    if(route === 'signin')\n      this.setState(initialState)\n    if(route === 'home')\n      this.setState({ isSignedin: true });\n    else{\n      this.setState({ isSignedin: false });\n    }\n  }\n  \n  render() {\n    return(\n      <div className='App'>\n        <Particles className='particles' params={particlesOptions} />\n        <Header changeRoute={this.changeRoute} isSignedin={this.state.isSignedin} />\n        { this.state.route === 'signin'                                         // if(condition)\n        ? <Signin loadUser={this.loadUser} changeRoute={this.changeRoute} />    // ? means true\n        : (                                                                     // : means else\n            this.state.route === 'register'            \n            ? <Registration loadUser={this.loadUser} changeRoute={this.changeRoute}  />\n            : <div>\n                <Logo />\n                <Rank name={this.state.user.name} entries={this.state.user.entries} />\n                <InputForm inputOnChange={this.inputOnChange} btnOnClick={this.btnOnClick} />\n                <InputImage imageURL={this.state.imageUrl} box={this.state.box} />\n                {\n                  this.state.userCanUseIt === false\n                  ? <Hints></Hints> \n                  : <span></span>\n                }\n              </div>\n          )\n        }\n      </div>\n    )\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}